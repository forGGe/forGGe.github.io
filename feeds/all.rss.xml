<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>forGGe's Nexus</title><link>https://forgge.github.io/</link><description>Thoughts on Open Source, Linux, Embedded and System programming</description><lastBuildDate>Sat, 14 Apr 2018 00:00:00 +0300</lastBuildDate><item><title>Using thingsboard.io, STM32 B-L475E-IOT01A IoT kit and ARM Mbed to monitor temperature</title><link>https://forgge.github.io/B-L475E-IOT01A-thingsboard-read-temperature-and-humidity-using-mbed.html</link><description>&lt;img alt="ThingsBoard, STM32 B-L475E-IOT01A IoT kit and Mbed" src="https://forgge.github.io/images/thingsboard-stm32-mbed-banner.png" /&gt;
&lt;p&gt;Sampling and visualizing temperature samples is the key usecase for any set
of IoT tools. If your tools can't do it easily, you should probably trow
away that tools.&lt;/p&gt;
&lt;p&gt;In this article I will show you how to use free and open-source frameworks,
ThingsBoard and Mbed, to collect, send and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max</dc:creator><pubDate>Sat, 14 Apr 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:forgge.github.io,2018-04-14:/B-L475E-IOT01A-thingsboard-read-temperature-and-humidity-using-mbed.html</guid><category>iot</category><category>c</category><category>c++</category><category>mbed</category><category>thingsboard</category><category>stm32</category><category>linux</category></item><item><title>How to control header include from command line in GCC</title><link>https://forgge.github.io/gcc-how-to-control-header-include-from-command-line.html</link><description>&lt;p&gt;In following sections, I will describe how to control which header must be
included in your source files via command-line parameters of GCC.&lt;/p&gt;
&lt;div class="section" id="the-case"&gt;
&lt;h2&gt;The Case&lt;/h2&gt;
&lt;p&gt;Imagine that you have a simple application, consisting of just two files:&lt;/p&gt;
&lt;p&gt;One &lt;tt class="docutils literal"&gt;main.c&lt;/tt&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;foo.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;print_foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max</dc:creator><pubDate>Mon, 26 Mar 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:forgge.github.io,2018-03-26:/gcc-how-to-control-header-include-from-command-line.html</guid><category>c</category><category>c++</category><category>gcc</category></item><item><title>Hello, World!</title><link>https://forgge.github.io/hello-world.html</link><description>&lt;p&gt;Finally, my first blog is running. Cheers to everyone who reading this!&lt;/p&gt;
&lt;p&gt;Nothing special about this article in particular. It exists only for testing
purposes.&lt;/p&gt;
&lt;p&gt;While this blog is getting more useful stuff, you can either leave your
comment below or check &lt;a class="reference external" href="https://forgge.github.io/pages/about-me.html"&gt;About Me&lt;/a&gt; page.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Max</dc:creator><pubDate>Sat, 24 Mar 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:forgge.github.io,2018-03-24:/hello-world.html</guid></item></channel></rss>